#############################################################################
# Makefile for building: ray
# Generated by qmake (2.01a) (Qt 4.7.2) on: Mon Oct 10 13:38:47 2011
# Project:  ray.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile ray.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Iobj -Iutil -Isrc -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = obj/objstream.cpp \
		src/camera.cpp \
		src/model.cpp \
		src/ray.cpp \
		src/surface.cpp \
		src/transform.cpp \
		util/vector.cpp parser_yacc.cpp
OBJECTS       = objstream.o \
		camera.o \
		model.o \
		ray.o \
		surface.o \
		transform.o \
		vector.o \
		parser_yacc.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		ray.pro
QMAKE_TARGET  = ray
DESTDIR       = 
TARGET        = ray

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ray.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile ray.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile ray.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ray1.0.0 || $(MKDIR) .tmp/ray1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ray1.0.0/ && $(COPY_FILE) --parents obj/objstream.hpp src/camera.h src/model.h src/ray.h src/surface.h src/transform.h util/vector.h util/matrix.tpp src/queue.tpp .tmp/ray1.0.0/ && $(COPY_FILE) --parents obj/objstream.cpp src/camera.cpp src/model.cpp src/ray.cpp src/surface.cpp src/transform.cpp util/vector.cpp .tmp/ray1.0.0/ && $(COPY_FILE) --parents obj/parser.y .tmp/ray1.0.0/ && $(COPY_FILE) --parents obj/parser.y .tmp/ray1.0.0/ && (cd `dirname .tmp/ray1.0.0` && $(TAR) ray1.0.0.tar ray1.0.0 && $(COMPRESS) ray1.0.0.tar) && $(MOVE) `dirname .tmp/ray1.0.0`/ray1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ray1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all: parser_yacc.h
compiler_yacc_decl_clean:
	-$(DEL_FILE) parser_yacc.h
parser_yacc.h: obj/parser.y
	yacc -d -p parser -b parser obj/parser.y
	 rm -f parser_yacc.h parser_yacc.cpp
	 mv -f parser.tab.h parser_yacc.h
	 mv -f parser.tab.c parser_yacc.cpp
	

compiler_yacc_impl_make_all: parser_yacc.cpp
compiler_yacc_impl_clean:
	-$(DEL_FILE) parser_yacc.cpp
parser_yacc.cpp: obj/parser.y \
		parser_yacc.h
	


compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_yacc_decl_clean compiler_yacc_impl_clean 

####### Compile

objstream.o: obj/objstream.cpp obj/objstream.hpp \
		util/matrix.tpp \
		util/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o objstream.o obj/objstream.cpp

camera.o: src/camera.cpp src/camera.h \
		src/model.h \
		util/matrix.tpp \
		util/vector.h \
		obj/objstream.hpp \
		src/ray.h \
		src/surface.h \
		src/queue.tpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camera.o src/camera.cpp

model.o: src/model.cpp src/model.h \
		util/matrix.tpp \
		util/vector.h \
		obj/objstream.hpp \
		src/surface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o model.o src/model.cpp

ray.o: src/ray.cpp src/camera.h \
		src/model.h \
		util/matrix.tpp \
		util/vector.h \
		obj/objstream.hpp \
		src/ray.h \
		src/surface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ray.o src/ray.cpp

surface.o: src/surface.cpp src/surface.h \
		src/model.h \
		util/matrix.tpp \
		util/vector.h \
		obj/objstream.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o surface.o src/surface.cpp

transform.o: src/transform.cpp src/transform.h \
		util/matrix.tpp \
		util/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o transform.o src/transform.cpp

vector.o: util/vector.cpp util/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vector.o util/vector.cpp

parser_yacc.o: parser_yacc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parser_yacc.o parser_yacc.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

